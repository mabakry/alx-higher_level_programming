test for  2-matrix_divided module
==================================
import module:
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

test list of lists:
	>>> matrix_divided([[3, 2],[5, 8]], 2)
	[[1.5, 1.0], [2.5, 4.0]]

Test missing 1 arg:
	>>> matrix_divided()
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Test 1st arg empty list:
	>>> matrix_divided([], 1)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test 1st arg str:
	>>> matrix_divided("foo", 1)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test matrix with different rows:
	>>> matrix_divided([[11, 3, 88], [8, 7]], 22)
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

Test matrix with not int:
	matrix_divided([[99, 13, 25], [11, "jh", 5]], 7)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
